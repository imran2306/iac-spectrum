AWSTemplateFormatVersion: '2010-09-09'
Description: Code Pipeline Initiation Template.

Parameters: 
  ApplicationName:
    Type: String
    Description: Application Name
    Default: Spectrum

  ArtifactStoreS3Location:
    Type: String
    Description: Name of the S3 bucket to store CodePipeline artificats.
    Default: kd-rest-apps-ohio-build-artifact-output-bucket 

  GitHubSourceCodeRepoURI:
    Type: String
    Default: https://github.com/imran2306/iac-spectrum.git

  GitHubRepoName:
    Description: GitHub project/repo name, in which the template files are stored.
    Type: String
    Default: imran2306/kd-rest-apps

  PipelineName:
    Description: A name for the pipeline
    Type: String

  TemplateFileName1:
    Default: Have to Provide
    Description: Path of the Infra CloudFormation template that creates common resources for the BU projects
    Type: String
    
  StackNameValue1:
    Default: Have to Provide
    Description: Name of the Infra CloudFormation stack
    Type: String

  StackConfigValue1PreProd:
    Default: Have to Provide
    Description: The parameter file path for the CloudFormation template that creates resources in PreProd account
    Type: String

  TemplateFileName2:
    Default: Have to Provide
    Description: Path of the CloudFormation template that creates necessary resources for the specific project
    Type: String

  StackNameValue2:
    Default: Have to Provide
    Description: Name of the Application CloudFormation stack
    Type: String

  StackConfigValue2PreProd:
    Default: Have to Provide
    Description: The parameter file name for the CloudFormation template that creates necessary respurces for the specific project in PreProd account
    Type: String

  CMKS3ArnParameter:
    Description: S3 Customer Managed Key Arn Value 
    # Type: 'AWS::SSM::Parameter::Value<String>'
    # Default: 's3_cmk_arn'
    Type: String
    Default: arn:aws:kms

  CodeBuildRoleArnParameter:
    Description: SSM Parameter for CodeBuild Role Arn
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'codebuildrole_arn'

  PreProdCrossAccountRoleArn:
    Description: Arn for the PreProd Cross Account Role
    Type: String
    Default: arn:aws:iam::<enter account no.>:role/CICDChildRole

  ProjectTeam:
    Description: name of project team
    Type: String
    Default: AnA

  ProjectType:
    Description: type of pipeline
    Type: String
    AllowedValues:
      - multi-account-pipeline-test
      - multi-account-pipeline-master

Resources:
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: "CodeBuildVPCAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "ec2:Describe*"
                  - "cloudformation:ValidateTemplate"
                  - "elasticloadbalancing:Describe*"
                  - "autoscaling:Describe*"
                  - "iam:Get*"
                  - "iam:List*"
                  - "logs:Describe*"
                  - "logs:Get*"
                  - "tag:Get*"
                Resource:
                  - "*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}

  ValidateCFNCodeBuildProjectPreProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub PreProdCFNValidateBuildProject-${AWS::StackName}
      Description: Validates CloudFormation syntax
      ServiceRole: !GetAtt [ CodeBuildRole, Arn ]
      Artifacts:
        Type: S3
        Location: !Ref ArtifactStoreS3Location
        Name: !Sub CodeBuildCFN-${AWS::StackName}
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
            - Name: Template1
              Value:
                Ref: TemplateFileName1
            - Name: Template2
              Value:
                Ref: TemplateFileName2
      Source:
        Type: GITHUB
        Location: !Ref GitHubSourceCodeRepoURI
        Auth:
          Type: CODECONNECTIONS
          Resource: arn:aws:codeconnections:us-east-2:211125769392:connection/75bf7b54-5064-4c73-bc2a-9d53188df2f4            
      TimeoutInMinutes: 10
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CodePipelineVPCAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/*
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:CreateStack"
                  - "cloudformation:CreateUploadBucket"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:ValidateTemplate"
                  - "cloudformation:ExecuteChangeSet"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole-${AWS::StackName}

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [ CodePipelineRole, Arn ]
      ArtifactStore:
          Location: !Ref 'ArtifactStoreS3Location'
          Type: S3
        #  EncryptionKey:
         #   Id: !Ref 'CMKS3ArnParameter'
          #  Type: KMS
      DisableInboundStageTransitions: []
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              InputArtifacts: []  
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ConnectionArn: arn:aws:codeconnections:us-east-2:211125769392:connection/75bf7b54-5064-4c73-bc2a-9d53188df2f4
                BranchName: main
                RepositoryName: !Ref GitHubRepoName
                OutputArtifactFormat: CODE_ZIP                 
              RunOrder: 1
              #OutputArtifacts:
              #  - Name: SCCheckoutArtifact #old
              
        - Name: Build-PreProd
          Actions:
            - Name: ValidateCode-PreProd
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ValidateCFNCodeBuildProjectPreProd
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

        - Name: Deploy-in-PreProd
          Actions:
            - Name: Create-SetupPrerequisites-PreProd
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              RoleArn: !Ref PreProdCrossAccountRoleArn
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CREATE_UPDATE              
                Capabilities: CAPABILITY_NAMED_IAM
                OutputFileName: StaginVPCStackOutputFile                
                RoleArn: !Ref PreProdCrossAccountRoleArn
                StackName: !Ref StackNameValue1
                TemplateConfiguration: !Sub "BuildArtifact::${StackConfigValue1PreProd}"
                TemplatePath: !Sub "BuildArtifact::${TemplateFileName1}"
              RunOrder: 1

            - Name: ERP1-PreProd-<project name>
              RoleArn: !Ref PreProdCrossAccountRoleArn
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                Capabilities: CAPABILITY_NAMED_IAM
                ActionMode: CREATE_UPDATE
               #
               #RoleArn: !Ref PreProdCrossAccountRoleArn
                StackName: !Ref StackNameValue2
                TemplateConfiguration: !Sub "BuildArtifact::${StackConfigValue2PreProd}"
                TemplatePath: !Sub "BuildArtifact::${TemplateFileName2}"
              RunOrder: 2
      Tags:
          - Key: Application
            Value: !Ref ApplicationName
         